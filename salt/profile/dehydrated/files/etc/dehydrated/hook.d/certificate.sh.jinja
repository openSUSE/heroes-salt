#!/bin/sh -u
{{ pillar['managed_by_salt'] }}
{%- set ssh_user   = 'cert' %}
{%- set ssh_common = ' -qi /etc/dehydrated/.ssh/id_ed25519 -oHostKeyAlgorithms=ssh-ed25519 -oCheckHostIP=no' %}
{%- set scp        = 'scp -B' ~ ssh_common %}
{%- set ssh        = 'ssh -l ' ~ ssh_user ~ ' -oBatchMode=yes' ~ ssh_common %} 
{%- set src_base   = '/etc/dehydrated-' ~ instance ~ '/certs/' ~ certificate %}
{%- set dst_top    = '/etc/ssl/services/' %}
{%- set dst_base   =  dst_top ~ certificate %}
SRC_BASE='{{ src_base }}'
DST_BASE='{{ dst_base }}'
CRT_PEM="$SRC_BASE/fullchain.pem"
KEY_PEM="$SRC_BASE/privkey.pem"
COMBINED_PEM="$SRC_BASE/combined.pem"
FAILED='/var/log/dehydrated-{{ instance }}/deployment_failures/{{ certificate }}'
DATE="$(date -Iseconds)"
STATUS=0

fail() {
  echo "$1,${2:-local},$DATE" >> "$FAILED"
  STATUS=1
}

if ! { [ -r "$CRT_PEM" ] && [ -r "$KEY_PEM" ] ; }
then
  fail 'files'
  echo 'No usable source files.'
  exit 1
fi

umask 177
cat "$CRT_PEM" "$KEY_PEM" > "$COMBINED_PEM"

{%- for target, target_config in targets.items() %}
{%- do salt.log.debug('dehydrated: parsing target ' ~ target) %}
{%- set services = target_config.get('services', []) %}

if ping -q -c 1 '{{ target }}' >/dev/null
then
  COPY_STATUS=0
  echo 'Start of deployment to {{ target }} ...'

  {%- if 'haproxy' in services %}
  {{ scp }} "$COMBINED_PEM" {{ ssh_user }}@{{ target }}:{{ dst_top }}{{ certificate }}.pem || COPY_STATUS=1
  {%- do services.remove('haproxy') %}
  {%- endif %}
  {%- if services %}
  {{ scp }} "$CRT_PEM" "$KEY_PEM" {{ ssh_user }}@{{ target }}:"$DST_BASE" || COPY_STATUS=1
  {%- endif %}
  
  if [ "$COPY_STATUS" = 0 ]
  then
    {%- for service in services %}
    {{ ssh }} {{ target }} 'systemctl is-active --quiet {{ service }} || exit "$?" ; sudo systemctl try-reload-or-restart {{ service }}'
    SSH_STATUS="$?"
    case "$SSH_STATUS" in
      0 )
        echo 'Reloaded {{ service }}'
        ;;
      1 )
        fail 'reload' '{{ target }}'
        echo 'Failed to reload {{ service }}'
        ;;
      3 )
        echo 'Service {{ service }} is not active.'
        ;;
      255 )
        fail 'ssh' '{{ target }}'
        echo 'Connection to {{ target }} failed.'
        ;;
      * )
        fail 'ssh' '{{ target }}'
        echo "Unhandled exit code $SSH_STATUS"
        ;;
    esac
    {%- endfor %}
    echo 'End of deployment to {{ target }}.'
  else
    fail 'copy' '{{ target }}'
    echo 'Deployment to {{ target }} failed.'
  fi
else
  fail 'connect' '{{ target }}'
  echo 'Cannot reach {{ target }}, skipping deployment.'
fi

{%- endfor %}

if [ "$STATUS" = 0 ]
then
  if [ -f "$FAILED" ]
  then
    rm -v "$FAILED"
  fi
fi

rm "$COMBINED_PEM"
exit 0
