{%- set backendopts = ['forwardfor', 'srvtcpka'] -%}
{%- macro bind(addresses, port, options=None) -%}
        {%- for address in addresses %}
        - '{{ address }}:{{ port }}{{ ' ' ~ options if options is not none else '' }}'
        {%- endfor %}
{%- endmacro -%}
{%- macro extra(extramap) -%}
        {%- for extra, extra_config in extramap.items() %}
        {%- for action, headers in extra_config.items() %}
        {%- for header in headers %}
        - {{ extra }} {{ action }} {{ header }}
        {%- endfor %}
        {%- endfor %}
        {%- endfor %}
{%- endmacro -%}
{%- macro options(append=None) -%}
      options:
        {%- for option in backendopts %}
        - {{ option }}
        {%- endfor %}
{#- this is a workaround, {{ backendopts + ['foo\rbar\nHost:\ foo'] }} destroys the last backslash #}
        {%- if append is not none %}
        - {{ append.replace('\n', '\\n').replace('\r', '\\r') }}
        {%- endif %}
{%- endmacro -%}
{%- macro httpcheck(host, status, uri='/', method='head', tls=False) %}
      httpchecks:
        - connect{{ ' ssl alpn h2' if tls else '' }}
        - send meth {{ method | upper }} uri {{ uri }} ver HTTP/1.1 hdr Host {{ host }} hdr User-Agent haproxy/health-check
        - expect status {{ status }}
{%- endmacro %}
{%- macro server(server, host, port=80, check='check', extra_extra=None, extra_check=None, header=True) -%}
      {%- set extra = 'extra: ' %}
      {%- if header %}
      servers:
      {%- endif %}
        {{ server }}:
          host: {{ host }}
          port: {{ port }}
          {%- if check is not none %}
          check: {{ check }}{{ ' ' ~ extra_check if extra_check is not none else '' }}
          {%- set extra = extra ~ 'port ' ~ port %}
          {%- endif %}
          {%- if extra_extra %}
          {%- set extra = extra ~ ' ' ~ extra_extra %}
          {%- endif %}
          {%- if check or extra_extra %}
          {{ extra }}
          {%- endif %}
{%- endmacro -%}

{%- macro rsync_backend_with_checks(host='::1', port=873, check_parameters='', extra=None, with_check=True, listen_addresses=[], listen_port=0, listen_params='', listen_protocol='plain', generate_section=False) %}
{%- if generate_section %}
{% set cleanedup_hostname = host.replace('.', '_') %}
{%- set section_name = 'rsync_' ~ cleanedup_hostname ~ '_' ~ listen_protocol %}
    {{ section_name }}:
{%- endif %}
      {%- if listen_addresses|length > 0 and listen_port > 0 %}
      bind:
        {%- for address in listen_addresses %}
        - {{ address }}:{{ listen_port }} {{ listen_params }}
        {%- endfor %}
      {%- endif %}
      mode: tcp
      options:
        - tcplog
      {%- if with_check %}
        - tcp-check
      extra:
        - 'tcp-check comment "Client Initialization"'
        - 'tcp-check expect rstring "@RSYNCD: [0-9.]+"'
        - 'tcp-check comment "Server Initialization"'
        - 'tcp-check send "@RSYNCD: 28.0\n"'
        - 'tcp-check comment "Client Query (module name rsync-health)"'
        - 'tcp-check send "#list\n"'
        - 'tcp-check comment "Data (module name rsync-health)"'
        - 'tcp-check expect string "@RSYNCD: EXIT\n"'
        - 'tcp-check comment "Cleanup"'
        - 'tcp-check send "@RSYNCD: EXIT\n"'
      {%- endif %}
      servers:
        rsync_server:
          host: {{ host }}
          port: {{ port }}
      {%- if with_check %}
          check: "check inter 10m fastinter 2s downinter 2s {{ check_parameters }}"
      {%- endif %}
      {%- if extra is not none %}
          extra: "{{ extra }}"
      {%- endif %}
{%- endmacro %}

{%- macro rsync_ssl_backend_with_checks(host='::1', port=874, check_parameters='', extra='', with_check=True, listen_addresses=[], listen_port=0, listen_params='', listen_protocol='ssl', generate_section=False) %}
{%- set extra_with_ssl = 'send-proxy-v2 ' ~ extra  ~ ' ssl verify required verifyhost ' ~ host ~ ' check-sni ' ~ host ~ ' sni str(' ~ host ~ ') ca-file /etc/ssl/ca-bundle.pem' %}
{{ rsync_backend_with_checks(host=host, port=port, check_parameters=check_parameters, extra=extra_with_ssl, with_check=with_check, listen_addresses=listen_addresses, listen_port=listen_port, listen_params=listen_params, listen_protocol=listen_protocol, generate_section=generate_section) }}
{%- endmacro %}

{%- macro metrics(listen, v6=True) %}
    {%- if v6 %}
    {%- set options = 'v6only' %}
    {%- else %}
    {%- set options = None %}
    {%- endif %}
    metrics:
      bind:
        {{ bind(listen, 8404, options) }}
      options:
        - http-use-htx
      httprequests:
        - use-service prometheus-exporter if { path /metrics }
        {#- we don't serve anything other than /metrics here #}
        - return status 204
{%- endmacro %}
