#!/bin/bash -eu

copy_logs () {
    cp /var/log/salt/minion minion_log.txt
    cp /var/log/salt/master master_log.txt
}

## Salt Master setup

# Pre-seed the minion key
cp test/fixtures/minion.pub /etc/salt/pki/master/minions/"$HOSTNAME"

# Ensure directories purged during the container build are ready
install -o salt -g salt -d -m 0750 /var/log/salt
chown -R salt: /var/cache/salt/master

# Configure and start the master
tee >/etc/salt/master <<EOF
file_roots:
  base:
  - /srv/salt
  - /usr/share/salt-formulas/states
  - /srv/formulas
interface: 127.0.0.1
log_level: warning
log_level_logfile: debug
user: salt
EOF
systemctl start salt-master

## Salt Minion setup

# gateway, hypervisor.cluster and hypervisor.standalone roles: infrastructure-formula needs virt_cluster
echo 'virt_cluster: falkor-bare' >> /etc/salt/grains

# roles with "nftables: true" (correctly) fail if neither a host nor a cluster nftables tree is provided
mkdir salt/files/nftables/"$HOSTNAME"

echo "== /etc/salt/grains =="
cat "/etc/salt/grains"
echo "== /etc/salt/grains END =="

# Install the pre-seeded key pair
cp test/fixtures/minion* /etc/salt/pki/minion/

# Configure and start the minion
echo 'features: {"x509_v2": true}' > /etc/salt/minion.d/features_x509_v2.conf
tee >/etc/salt/minion <<EOF
master: 127.0.0.1
log_level: warning
log_level_logfile: debug
EOF
systemctl start salt-minion

# Prepare a pillar/id/ file
IDFILE="pillar/id/$HOSTNAME.sls"

# Add test pillars for data which is not included by roles
sed "s/runner/$HOSTNAME/" test/pillar/clusters.yaml >> "$IDFILE"
cat test/pillar/{mirrorcache,suse_ha,conntrackd-asgard}.sls >> "$IDFILE"

echo "== $IDFILE =="
cat "$IDFILE"
echo "== $IDFILE END =="

out='setup.txt'
out_errors='setup_errors.txt'

salt_args=( '-lcritical' '--log-file=setup_errors.txt' '--log-file-level=info' "--out-file=$out" '--out-file-append' )

waited=0
# a working ping takes between 5 and 10 seconds - salt-call tends to freeze upon TERM, hence follow with a KILL
until timeout -k13 10 salt-call "${salt_args[@]}" -t3 test.ping
do
  waited=$(( waited + 1 ))
  if [ "$waited" = 10 ]
  then
    echo 'Master is still not responding after ten attempts, giving up.' | tee -a "$out" "$out_errors"
    copy_logs
    exit 1
  else
    echo 'Waiting for master ...' >> "$out"
  fi
done

salt_args=( "${salt_args[@]}" "$HOSTNAME" )

# Update grains modules, pillar and mine - execution and runner modules are already cached through prepare_test_env.sh
for cmd in saltutil.sync_grains saltutil.refresh_pillar mine.update
do
  echo "--> $cmd" >> "$out"
  salt "${salt_args[@]}" "$cmd" || { copy_logs ; exit 1 ; }
done

# monitor user in role.base
groupadd monitor
